{
  "openapi": "3.0.0",
  "info": {
    "title": "VEGE",
    "description": "E commerce",
    "version": "1.0.0"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "API for Authentication"
    },
    {
      "name": "User",
      "description": "API for Details"
    }
  ],
  "paths": {
    "/api/register": {
      "post": {
        "summary": "Register a new user",
        "operationId": "registerUser",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request. Invalid input data"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "Login user",
        "operationId": "loginUser",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Unauthorized. Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "operationId": "forgotPassword",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Unauthorized. Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/reset-password": {
      "post": {
        "summary": "Reset Password",
        "operationId": "resetPassword",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address"
                  },
                  "token": {
                    "type": "string",
                    "description": "Forgot password token"
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password"
                  },
                  "confirm_password": {
                    "type": "string",
                    "description": "User's confirm password"
                  }
                },
                "required": ["email", "password","confirm_password","token"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Unauthorized. Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "summary": "user Logout",
        "operationId": "userLogout",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "summary": "user Profile",
        "operationId": "userProfile",
        "tags": ["User"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}